# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envoy/admin/v2alpha/metrics.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='envoy/admin/v2alpha/metrics.proto',
  package='envoy.admin.v2alpha',
  syntax='proto3',
  serialized_pb=_b('\n!envoy/admin/v2alpha/metrics.proto\x12\x13\x65nvoy.admin.v2alpha\"\x81\x01\n\x0cSimpleMetric\x12\x34\n\x04type\x18\x01 \x01(\x0e\x32&.envoy.admin.v2alpha.SimpleMetric.Type\x12\r\n\x05value\x18\x02 \x01(\x04\x12\x0c\n\x04name\x18\x03 \x01(\t\"\x1e\n\x04Type\x12\x0b\n\x07\x43OUNTER\x10\x00\x12\t\n\x05GAUGE\x10\x01\x42\x33\n!io.envoyproxy.envoy.admin.v2alphaB\x0cMetricsProtoP\x01\x62\x06proto3')
)



_SIMPLEMETRIC_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='envoy.admin.v2alpha.SimpleMetric.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COUNTER', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAUGE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=158,
  serialized_end=188,
)
_sym_db.RegisterEnumDescriptor(_SIMPLEMETRIC_TYPE)


_SIMPLEMETRIC = _descriptor.Descriptor(
  name='SimpleMetric',
  full_name='envoy.admin.v2alpha.SimpleMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='envoy.admin.v2alpha.SimpleMetric.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='envoy.admin.v2alpha.SimpleMetric.value', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='envoy.admin.v2alpha.SimpleMetric.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SIMPLEMETRIC_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=188,
)

_SIMPLEMETRIC.fields_by_name['type'].enum_type = _SIMPLEMETRIC_TYPE
_SIMPLEMETRIC_TYPE.containing_type = _SIMPLEMETRIC
DESCRIPTOR.message_types_by_name['SimpleMetric'] = _SIMPLEMETRIC
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SimpleMetric = _reflection.GeneratedProtocolMessageType('SimpleMetric', (_message.Message,), dict(
  DESCRIPTOR = _SIMPLEMETRIC,
  __module__ = 'envoy.admin.v2alpha.metrics_pb2'
  # @@protoc_insertion_point(class_scope:envoy.admin.v2alpha.SimpleMetric)
  ))
_sym_db.RegisterMessage(SimpleMetric)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n!io.envoyproxy.envoy.admin.v2alphaB\014MetricsProtoP\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
