# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envoy/type/range.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='envoy/type/range.proto',
  package='envoy.type',
  syntax='proto3',
  serialized_pb=_b('\n\x16\x65nvoy/type/range.proto\x12\nenvoy.type\x1a\x14gogoproto/gogo.proto\"(\n\nInt64Range\x12\r\n\x05start\x18\x01 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x03\")\n\x0b\x44oubleRange\x12\r\n\x05start\x18\x01 \x01(\x01\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x01\x42\x10Z\nenvoy_type\xa8\xe2\x1e\x01\x62\x06proto3')
  ,
  dependencies=[gogoproto_dot_gogo__pb2.DESCRIPTOR,])




_INT64RANGE = _descriptor.Descriptor(
  name='Int64Range',
  full_name='envoy.type.Int64Range',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='envoy.type.Int64Range.start', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end', full_name='envoy.type.Int64Range.end', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=60,
  serialized_end=100,
)


_DOUBLERANGE = _descriptor.Descriptor(
  name='DoubleRange',
  full_name='envoy.type.DoubleRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='envoy.type.DoubleRange.start', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end', full_name='envoy.type.DoubleRange.end', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=143,
)

DESCRIPTOR.message_types_by_name['Int64Range'] = _INT64RANGE
DESCRIPTOR.message_types_by_name['DoubleRange'] = _DOUBLERANGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Int64Range = _reflection.GeneratedProtocolMessageType('Int64Range', (_message.Message,), dict(
  DESCRIPTOR = _INT64RANGE,
  __module__ = 'envoy.type.range_pb2'
  # @@protoc_insertion_point(class_scope:envoy.type.Int64Range)
  ))
_sym_db.RegisterMessage(Int64Range)

DoubleRange = _reflection.GeneratedProtocolMessageType('DoubleRange', (_message.Message,), dict(
  DESCRIPTOR = _DOUBLERANGE,
  __module__ = 'envoy.type.range_pb2'
  # @@protoc_insertion_point(class_scope:envoy.type.DoubleRange)
  ))
_sym_db.RegisterMessage(DoubleRange)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\nenvoy_type\250\342\036\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
