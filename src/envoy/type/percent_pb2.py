# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envoy/type/percent.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from validate import validate_pb2 as validate_dot_validate__pb2
from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='envoy/type/percent.proto',
  package='envoy.type',
  syntax='proto3',
  serialized_pb=_b('\n\x18\x65nvoy/type/percent.proto\x12\nenvoy.type\x1a\x17validate/validate.proto\x1a\x14gogoproto/gogo.proto\"3\n\x07Percent\x12(\n\x05value\x18\x01 \x01(\x01\x42\x19\xba\xe9\xc0\x03\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00Y@)\x00\x00\x00\x00\x00\x00\x00\x00\"\xb5\x01\n\x11\x46ractionalPercent\x12\x11\n\tnumerator\x18\x01 \x01(\r\x12N\n\x0b\x64\x65nominator\x18\x02 \x01(\x0e\x32-.envoy.type.FractionalPercent.DenominatorTypeB\n\xba\xe9\xc0\x03\x05\x82\x01\x02\x10\x01\"=\n\x0f\x44\x65nominatorType\x12\x0b\n\x07HUNDRED\x10\x00\x12\x10\n\x0cTEN_THOUSAND\x10\x01\x12\x0b\n\x07MILLION\x10\x02\x42.\n\x18io.envoyproxy.envoy.typeB\x0cPercentProtoP\x01\xa8\xe2\x1e\x01\x62\x06proto3')
  ,
  dependencies=[validate_dot_validate__pb2.DESCRIPTOR,gogoproto_dot_gogo__pb2.DESCRIPTOR,])



_FRACTIONALPERCENT_DENOMINATORTYPE = _descriptor.EnumDescriptor(
  name='DenominatorType',
  full_name='envoy.type.FractionalPercent.DenominatorType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HUNDRED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEN_THOUSAND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MILLION', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=261,
  serialized_end=322,
)
_sym_db.RegisterEnumDescriptor(_FRACTIONALPERCENT_DENOMINATORTYPE)


_PERCENT = _descriptor.Descriptor(
  name='Percent',
  full_name='envoy.type.Percent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='envoy.type.Percent.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\024\022\022\031\000\000\000\000\000\000Y@)\000\000\000\000\000\000\000\000'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=138,
)


_FRACTIONALPERCENT = _descriptor.Descriptor(
  name='FractionalPercent',
  full_name='envoy.type.FractionalPercent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='numerator', full_name='envoy.type.FractionalPercent.numerator', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='denominator', full_name='envoy.type.FractionalPercent.denominator', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\202\001\002\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FRACTIONALPERCENT_DENOMINATORTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=141,
  serialized_end=322,
)

_FRACTIONALPERCENT.fields_by_name['denominator'].enum_type = _FRACTIONALPERCENT_DENOMINATORTYPE
_FRACTIONALPERCENT_DENOMINATORTYPE.containing_type = _FRACTIONALPERCENT
DESCRIPTOR.message_types_by_name['Percent'] = _PERCENT
DESCRIPTOR.message_types_by_name['FractionalPercent'] = _FRACTIONALPERCENT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Percent = _reflection.GeneratedProtocolMessageType('Percent', (_message.Message,), dict(
  DESCRIPTOR = _PERCENT,
  __module__ = 'envoy.type.percent_pb2'
  # @@protoc_insertion_point(class_scope:envoy.type.Percent)
  ))
_sym_db.RegisterMessage(Percent)

FractionalPercent = _reflection.GeneratedProtocolMessageType('FractionalPercent', (_message.Message,), dict(
  DESCRIPTOR = _FRACTIONALPERCENT,
  __module__ = 'envoy.type.percent_pb2'
  # @@protoc_insertion_point(class_scope:envoy.type.FractionalPercent)
  ))
_sym_db.RegisterMessage(FractionalPercent)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\030io.envoyproxy.envoy.typeB\014PercentProtoP\001\250\342\036\001'))
_PERCENT.fields_by_name['value'].has_options = True
_PERCENT.fields_by_name['value']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\024\022\022\031\000\000\000\000\000\000Y@)\000\000\000\000\000\000\000\000'))
_FRACTIONALPERCENT.fields_by_name['denominator'].has_options = True
_FRACTIONALPERCENT.fields_by_name['denominator']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\202\001\002\020\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
