# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envoy/api/v2/lds.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from envoy.api.v2.core import address_pb2 as envoy_dot_api_dot_v2_dot_core_dot_address__pb2
from envoy.api.v2.core import base_pb2 as envoy_dot_api_dot_v2_dot_core_dot_base__pb2
from envoy.api.v2 import discovery_pb2 as envoy_dot_api_dot_v2_dot_discovery__pb2
from envoy.api.v2.listener import listener_pb2 as envoy_dot_api_dot_v2_dot_listener_dot_listener__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from validate import validate_pb2 as validate_dot_validate__pb2
from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='envoy/api/v2/lds.proto',
  package='envoy.api.v2',
  syntax='proto3',
  serialized_pb=_b('\n\x16\x65nvoy/api/v2/lds.proto\x12\x0c\x65nvoy.api.v2\x1a\x1f\x65nvoy/api/v2/core/address.proto\x1a\x1c\x65nvoy/api/v2/core/base.proto\x1a\x1c\x65nvoy/api/v2/discovery.proto\x1a$envoy/api/v2/listener/listener.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x17validate/validate.proto\x1a\x14gogoproto/gogo.proto\"\xd2\x06\n\x08Listener\x12\x0c\n\x04name\x18\x01 \x01(\t\x12;\n\x07\x61\x64\x64ress\x18\x02 \x01(\x0b\x32\x1a.envoy.api.v2.core.AddressB\x0e\xba\xe9\xc0\x03\x05\x8a\x01\x02\x10\x01\xc8\xde\x1f\x00\x12I\n\rfilter_chains\x18\x03 \x03(\x0b\x32\".envoy.api.v2.listener.FilterChainB\x0e\xba\xe9\xc0\x03\x05\x92\x01\x02\x08\x01\xc8\xde\x1f\x00\x12\x38\n\x10use_original_dst\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.BoolValueB\x02\x18\x01\x12G\n!per_connection_buffer_limit_bytes\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.UInt32Value\x12-\n\x08metadata\x18\x06 \x01(\x0b\x32\x1b.envoy.api.v2.core.Metadata\x12:\n\rdeprecated_v1\x18\x07 \x01(\x0b\x32#.envoy.api.v2.Listener.DeprecatedV1\x12\x34\n\ndrain_type\x18\x08 \x01(\x0e\x32 .envoy.api.v2.Listener.DrainType\x12\x45\n\x10listener_filters\x18\t \x03(\x0b\x32%.envoy.api.v2.listener.ListenerFilterB\x04\xc8\xde\x1f\x00\x12/\n\x0btransparent\x18\n \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12,\n\x08\x66reebind\x18\x0b \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x37\n\x0esocket_options\x18\r \x03(\x0b\x32\x1f.envoy.api.v2.core.SocketOption\x12@\n\x1atcp_fast_open_queue_length\x18\x0c \x01(\x0b\x32\x1c.google.protobuf.UInt32Value\x1a@\n\x0c\x44\x65precatedV1\x12\x30\n\x0c\x62ind_to_port\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\")\n\tDrainType\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x0f\n\x0bMODIFY_ONLY\x10\x01\x32\xeb\x01\n\x18ListenerDiscoveryService\x12X\n\x0fStreamListeners\x12\x1e.envoy.api.v2.DiscoveryRequest\x1a\x1f.envoy.api.v2.DiscoveryResponse\"\x00(\x01\x30\x01\x12u\n\x0e\x46\x65tchListeners\x12\x1e.envoy.api.v2.DiscoveryRequest\x1a\x1f.envoy.api.v2.DiscoveryResponse\"\"\x82\xd3\xe4\x93\x02\x1c\"\x17/v2/discovery:listeners:\x01*B\x07\x88\x01\x01\xa8\xe2\x1e\x01\x62\x06proto3')
  ,
  dependencies=[envoy_dot_api_dot_v2_dot_core_dot_address__pb2.DESCRIPTOR,envoy_dot_api_dot_v2_dot_core_dot_base__pb2.DESCRIPTOR,envoy_dot_api_dot_v2_dot_discovery__pb2.DESCRIPTOR,envoy_dot_api_dot_v2_dot_listener_dot_listener__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_protobuf_dot_wrappers__pb2.DESCRIPTOR,validate_dot_validate__pb2.DESCRIPTOR,gogoproto_dot_gogo__pb2.DESCRIPTOR,])



_LISTENER_DRAINTYPE = _descriptor.EnumDescriptor(
  name='DrainType',
  full_name='envoy.api.v2.Listener.DrainType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MODIFY_ONLY', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1090,
  serialized_end=1131,
)
_sym_db.RegisterEnumDescriptor(_LISTENER_DRAINTYPE)


_LISTENER_DEPRECATEDV1 = _descriptor.Descriptor(
  name='DeprecatedV1',
  full_name='envoy.api.v2.Listener.DeprecatedV1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bind_to_port', full_name='envoy.api.v2.Listener.DeprecatedV1.bind_to_port', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1024,
  serialized_end=1088,
)

_LISTENER = _descriptor.Descriptor(
  name='Listener',
  full_name='envoy.api.v2.Listener',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='envoy.api.v2.Listener.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='address', full_name='envoy.api.v2.Listener.address', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\212\001\002\020\001\310\336\037\000'))),
    _descriptor.FieldDescriptor(
      name='filter_chains', full_name='envoy.api.v2.Listener.filter_chains', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\222\001\002\010\001\310\336\037\000'))),
    _descriptor.FieldDescriptor(
      name='use_original_dst', full_name='envoy.api.v2.Listener.use_original_dst', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))),
    _descriptor.FieldDescriptor(
      name='per_connection_buffer_limit_bytes', full_name='envoy.api.v2.Listener.per_connection_buffer_limit_bytes', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='envoy.api.v2.Listener.metadata', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deprecated_v1', full_name='envoy.api.v2.Listener.deprecated_v1', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='drain_type', full_name='envoy.api.v2.Listener.drain_type', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='listener_filters', full_name='envoy.api.v2.Listener.listener_filters', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\310\336\037\000'))),
    _descriptor.FieldDescriptor(
      name='transparent', full_name='envoy.api.v2.Listener.transparent', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='freebind', full_name='envoy.api.v2.Listener.freebind', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='socket_options', full_name='envoy.api.v2.Listener.socket_options', index=11,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tcp_fast_open_queue_length', full_name='envoy.api.v2.Listener.tcp_fast_open_queue_length', index=12,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTENER_DEPRECATEDV1, ],
  enum_types=[
    _LISTENER_DRAINTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=281,
  serialized_end=1131,
)

_LISTENER_DEPRECATEDV1.fields_by_name['bind_to_port'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_LISTENER_DEPRECATEDV1.containing_type = _LISTENER
_LISTENER.fields_by_name['address'].message_type = envoy_dot_api_dot_v2_dot_core_dot_address__pb2._ADDRESS
_LISTENER.fields_by_name['filter_chains'].message_type = envoy_dot_api_dot_v2_dot_listener_dot_listener__pb2._FILTERCHAIN
_LISTENER.fields_by_name['use_original_dst'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_LISTENER.fields_by_name['per_connection_buffer_limit_bytes'].message_type = google_dot_protobuf_dot_wrappers__pb2._UINT32VALUE
_LISTENER.fields_by_name['metadata'].message_type = envoy_dot_api_dot_v2_dot_core_dot_base__pb2._METADATA
_LISTENER.fields_by_name['deprecated_v1'].message_type = _LISTENER_DEPRECATEDV1
_LISTENER.fields_by_name['drain_type'].enum_type = _LISTENER_DRAINTYPE
_LISTENER.fields_by_name['listener_filters'].message_type = envoy_dot_api_dot_v2_dot_listener_dot_listener__pb2._LISTENERFILTER
_LISTENER.fields_by_name['transparent'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_LISTENER.fields_by_name['freebind'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_LISTENER.fields_by_name['socket_options'].message_type = envoy_dot_api_dot_v2_dot_core_dot_base__pb2._SOCKETOPTION
_LISTENER.fields_by_name['tcp_fast_open_queue_length'].message_type = google_dot_protobuf_dot_wrappers__pb2._UINT32VALUE
_LISTENER_DRAINTYPE.containing_type = _LISTENER
DESCRIPTOR.message_types_by_name['Listener'] = _LISTENER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Listener = _reflection.GeneratedProtocolMessageType('Listener', (_message.Message,), dict(

  DeprecatedV1 = _reflection.GeneratedProtocolMessageType('DeprecatedV1', (_message.Message,), dict(
    DESCRIPTOR = _LISTENER_DEPRECATEDV1,
    __module__ = 'envoy.api.v2.lds_pb2'
    # @@protoc_insertion_point(class_scope:envoy.api.v2.Listener.DeprecatedV1)
    ))
  ,
  DESCRIPTOR = _LISTENER,
  __module__ = 'envoy.api.v2.lds_pb2'
  # @@protoc_insertion_point(class_scope:envoy.api.v2.Listener)
  ))
_sym_db.RegisterMessage(Listener)
_sym_db.RegisterMessage(Listener.DeprecatedV1)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\210\001\001\250\342\036\001'))
_LISTENER.fields_by_name['address'].has_options = True
_LISTENER.fields_by_name['address']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\212\001\002\020\001\310\336\037\000'))
_LISTENER.fields_by_name['filter_chains'].has_options = True
_LISTENER.fields_by_name['filter_chains']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\222\001\002\010\001\310\336\037\000'))
_LISTENER.fields_by_name['use_original_dst'].has_options = True
_LISTENER.fields_by_name['use_original_dst']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))
_LISTENER.fields_by_name['listener_filters'].has_options = True
_LISTENER.fields_by_name['listener_filters']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\310\336\037\000'))

_LISTENERDISCOVERYSERVICE = _descriptor.ServiceDescriptor(
  name='ListenerDiscoveryService',
  full_name='envoy.api.v2.ListenerDiscoveryService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1134,
  serialized_end=1369,
  methods=[
  _descriptor.MethodDescriptor(
    name='StreamListeners',
    full_name='envoy.api.v2.ListenerDiscoveryService.StreamListeners',
    index=0,
    containing_service=None,
    input_type=envoy_dot_api_dot_v2_dot_discovery__pb2._DISCOVERYREQUEST,
    output_type=envoy_dot_api_dot_v2_dot_discovery__pb2._DISCOVERYRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='FetchListeners',
    full_name='envoy.api.v2.ListenerDiscoveryService.FetchListeners',
    index=1,
    containing_service=None,
    input_type=envoy_dot_api_dot_v2_dot_discovery__pb2._DISCOVERYREQUEST,
    output_type=envoy_dot_api_dot_v2_dot_discovery__pb2._DISCOVERYRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\034\"\027/v2/discovery:listeners:\001*')),
  ),
])
_sym_db.RegisterServiceDescriptor(_LISTENERDISCOVERYSERVICE)

DESCRIPTOR.services_by_name['ListenerDiscoveryService'] = _LISTENERDISCOVERYSERVICE

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ListenerDiscoveryServiceStub(object):
    """[#protodoc-title: Listener]
    Listener :ref:`configuration overview <config_listeners>`

    The Envoy instance initiates an RPC at startup to discover a list of
    listeners. Updates are delivered via streaming from the LDS server and
    consist of a complete update of all listeners. Existing connections will be
    allowed to drain from listeners that are no longer present.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.StreamListeners = channel.stream_stream(
          '/envoy.api.v2.ListenerDiscoveryService/StreamListeners',
          request_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.SerializeToString,
          response_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.FromString,
          )
      self.FetchListeners = channel.unary_unary(
          '/envoy.api.v2.ListenerDiscoveryService/FetchListeners',
          request_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.SerializeToString,
          response_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.FromString,
          )


  class ListenerDiscoveryServiceServicer(object):
    """[#protodoc-title: Listener]
    Listener :ref:`configuration overview <config_listeners>`

    The Envoy instance initiates an RPC at startup to discover a list of
    listeners. Updates are delivered via streaming from the LDS server and
    consist of a complete update of all listeners. Existing connections will be
    allowed to drain from listeners that are no longer present.
    """

    def StreamListeners(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FetchListeners(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ListenerDiscoveryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'StreamListeners': grpc.stream_stream_rpc_method_handler(
            servicer.StreamListeners,
            request_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.FromString,
            response_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.SerializeToString,
        ),
        'FetchListeners': grpc.unary_unary_rpc_method_handler(
            servicer.FetchListeners,
            request_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.FromString,
            response_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'envoy.api.v2.ListenerDiscoveryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaListenerDiscoveryServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """[#protodoc-title: Listener]
    Listener :ref:`configuration overview <config_listeners>`

    The Envoy instance initiates an RPC at startup to discover a list of
    listeners. Updates are delivered via streaming from the LDS server and
    consist of a complete update of all listeners. Existing connections will be
    allowed to drain from listeners that are no longer present.
    """
    def StreamListeners(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FetchListeners(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaListenerDiscoveryServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """[#protodoc-title: Listener]
    Listener :ref:`configuration overview <config_listeners>`

    The Envoy instance initiates an RPC at startup to discover a list of
    listeners. Updates are delivered via streaming from the LDS server and
    consist of a complete update of all listeners. Existing connections will be
    allowed to drain from listeners that are no longer present.
    """
    def StreamListeners(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def FetchListeners(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    FetchListeners.future = None


  def beta_create_ListenerDiscoveryService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('envoy.api.v2.ListenerDiscoveryService', 'FetchListeners'): envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.FromString,
      ('envoy.api.v2.ListenerDiscoveryService', 'StreamListeners'): envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.FromString,
    }
    response_serializers = {
      ('envoy.api.v2.ListenerDiscoveryService', 'FetchListeners'): envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.SerializeToString,
      ('envoy.api.v2.ListenerDiscoveryService', 'StreamListeners'): envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.SerializeToString,
    }
    method_implementations = {
      ('envoy.api.v2.ListenerDiscoveryService', 'FetchListeners'): face_utilities.unary_unary_inline(servicer.FetchListeners),
      ('envoy.api.v2.ListenerDiscoveryService', 'StreamListeners'): face_utilities.stream_stream_inline(servicer.StreamListeners),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ListenerDiscoveryService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('envoy.api.v2.ListenerDiscoveryService', 'FetchListeners'): envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.SerializeToString,
      ('envoy.api.v2.ListenerDiscoveryService', 'StreamListeners'): envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.SerializeToString,
    }
    response_deserializers = {
      ('envoy.api.v2.ListenerDiscoveryService', 'FetchListeners'): envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.FromString,
      ('envoy.api.v2.ListenerDiscoveryService', 'StreamListeners'): envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.FromString,
    }
    cardinalities = {
      'FetchListeners': cardinality.Cardinality.UNARY_UNARY,
      'StreamListeners': cardinality.Cardinality.STREAM_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'envoy.api.v2.ListenerDiscoveryService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
