# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from envoy.api.v2 import discovery_pb2 as envoy_dot_api_dot_v2_dot_discovery__pb2


class RouteDiscoveryServiceStub(object):
  """[#protodoc-title: HTTP route configuration]
  * Routing :ref:`architecture overview <arch_overview_http_routing>`
  * HTTP :ref:`router filter <config_http_filters_router>`

  The resource_names field in DiscoveryRequest specifies a route configuration.
  This allows an Envoy configuration with multiple HTTP listeners (and
  associated HTTP connection manager filters) to use different route
  configurations. Each listener will bind its HTTP connection manager filter to
  a route table via this identifier.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StreamRoutes = channel.stream_stream(
        '/envoy.api.v2.RouteDiscoveryService/StreamRoutes',
        request_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.SerializeToString,
        response_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.FromString,
        )
    self.IncrementalRoutes = channel.stream_stream(
        '/envoy.api.v2.RouteDiscoveryService/IncrementalRoutes',
        request_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.IncrementalDiscoveryRequest.SerializeToString,
        response_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.IncrementalDiscoveryResponse.FromString,
        )
    self.FetchRoutes = channel.unary_unary(
        '/envoy.api.v2.RouteDiscoveryService/FetchRoutes',
        request_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.SerializeToString,
        response_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.FromString,
        )


class RouteDiscoveryServiceServicer(object):
  """[#protodoc-title: HTTP route configuration]
  * Routing :ref:`architecture overview <arch_overview_http_routing>`
  * HTTP :ref:`router filter <config_http_filters_router>`

  The resource_names field in DiscoveryRequest specifies a route configuration.
  This allows an Envoy configuration with multiple HTTP listeners (and
  associated HTTP connection manager filters) to use different route
  configurations. Each listener will bind its HTTP connection manager filter to
  a route table via this identifier.
  """

  def StreamRoutes(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IncrementalRoutes(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchRoutes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RouteDiscoveryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StreamRoutes': grpc.stream_stream_rpc_method_handler(
          servicer.StreamRoutes,
          request_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.FromString,
          response_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.SerializeToString,
      ),
      'IncrementalRoutes': grpc.stream_stream_rpc_method_handler(
          servicer.IncrementalRoutes,
          request_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.IncrementalDiscoveryRequest.FromString,
          response_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.IncrementalDiscoveryResponse.SerializeToString,
      ),
      'FetchRoutes': grpc.unary_unary_rpc_method_handler(
          servicer.FetchRoutes,
          request_deserializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryRequest.FromString,
          response_serializer=envoy_dot_api_dot_v2_dot_discovery__pb2.DiscoveryResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'envoy.api.v2.RouteDiscoveryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
