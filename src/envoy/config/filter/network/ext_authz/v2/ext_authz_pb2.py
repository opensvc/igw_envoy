# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envoy/config/filter/network/ext_authz/v2/ext_authz.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from envoy.api.v2.core import grpc_service_pb2 as envoy_dot_api_dot_v2_dot_core_dot_grpc__service__pb2
from validate import validate_pb2 as validate_dot_validate__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='envoy/config/filter/network/ext_authz/v2/ext_authz.proto',
  package='envoy.config.filter.network.ext_authz.v2',
  syntax='proto3',
  serialized_pb=_b('\n8envoy/config/filter/network/ext_authz/v2/ext_authz.proto\x12(envoy.config.filter.network.ext_authz.v2\x1a$envoy/api/v2/core/grpc_service.proto\x1a\x17validate/validate.proto\"|\n\x08\x45xtAuthz\x12\x1e\n\x0bstat_prefix\x18\x01 \x01(\tB\t\xba\xe9\xc0\x03\x04r\x02 \x01\x12\x34\n\x0cgrpc_service\x18\x02 \x01(\x0b\x32\x1e.envoy.api.v2.core.GrpcService\x12\x1a\n\x12\x66\x61ilure_mode_allow\x18\x03 \x01(\x08\x42\x04Z\x02v2b\x06proto3')
  ,
  dependencies=[envoy_dot_api_dot_v2_dot_core_dot_grpc__service__pb2.DESCRIPTOR,validate_dot_validate__pb2.DESCRIPTOR,])




_EXTAUTHZ = _descriptor.Descriptor(
  name='ExtAuthz',
  full_name='envoy.config.filter.network.ext_authz.v2.ExtAuthz',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stat_prefix', full_name='envoy.config.filter.network.ext_authz.v2.ExtAuthz.stat_prefix', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\004r\002 \001'))),
    _descriptor.FieldDescriptor(
      name='grpc_service', full_name='envoy.config.filter.network.ext_authz.v2.ExtAuthz.grpc_service', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='failure_mode_allow', full_name='envoy.config.filter.network.ext_authz.v2.ExtAuthz.failure_mode_allow', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=165,
  serialized_end=289,
)

_EXTAUTHZ.fields_by_name['grpc_service'].message_type = envoy_dot_api_dot_v2_dot_core_dot_grpc__service__pb2._GRPCSERVICE
DESCRIPTOR.message_types_by_name['ExtAuthz'] = _EXTAUTHZ
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ExtAuthz = _reflection.GeneratedProtocolMessageType('ExtAuthz', (_message.Message,), dict(
  DESCRIPTOR = _EXTAUTHZ,
  __module__ = 'envoy.config.filter.network.ext_authz.v2.ext_authz_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.network.ext_authz.v2.ExtAuthz)
  ))
_sym_db.RegisterMessage(ExtAuthz)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\002v2'))
_EXTAUTHZ.fields_by_name['stat_prefix'].has_options = True
_EXTAUTHZ.fields_by_name['stat_prefix']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\004r\002 \001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
