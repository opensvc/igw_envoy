# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envoy/config/filter/accesslog/v2/accesslog.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from envoy.api.v2.core import base_pb2 as envoy_dot_api_dot_v2_dot_core_dot_base__pb2
from envoy.api.v2.route import route_pb2 as envoy_dot_api_dot_v2_dot_route_dot_route__pb2
from envoy.type import percent_pb2 as envoy_dot_type_dot_percent__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from validate import validate_pb2 as validate_dot_validate__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='envoy/config/filter/accesslog/v2/accesslog.proto',
  package='envoy.config.filter.accesslog.v2',
  syntax='proto3',
  serialized_pb=_b('\n0envoy/config/filter/accesslog/v2/accesslog.proto\x12 envoy.config.filter.accesslog.v2\x1a\x1c\x65nvoy/api/v2/core/base.proto\x1a\x1e\x65nvoy/api/v2/route/route.proto\x1a\x18\x65nvoy/type/percent.proto\x1a\x19google/protobuf/any.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x17validate/validate.proto\"\xc8\x01\n\tAccessLog\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x41\n\x06\x66ilter\x18\x02 \x01(\x0b\x32\x31.envoy.config.filter.accesslog.v2.AccessLogFilter\x12-\n\x06\x63onfig\x18\x03 \x01(\x0b\x32\x17.google.protobuf.StructB\x02\x18\x01H\x00\x12,\n\x0ctyped_config\x18\x04 \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x42\r\n\x0b\x63onfig_type\"\xb5\x06\n\x0f\x41\x63\x63\x65ssLogFilter\x12P\n\x12status_code_filter\x18\x01 \x01(\x0b\x32\x32.envoy.config.filter.accesslog.v2.StatusCodeFilterH\x00\x12K\n\x0f\x64uration_filter\x18\x02 \x01(\x0b\x32\x30.envoy.config.filter.accesslog.v2.DurationFilterH\x00\x12Y\n\x17not_health_check_filter\x18\x03 \x01(\x0b\x32\x36.envoy.config.filter.accesslog.v2.NotHealthCheckFilterH\x00\x12M\n\x10traceable_filter\x18\x04 \x01(\x0b\x32\x31.envoy.config.filter.accesslog.v2.TraceableFilterH\x00\x12I\n\x0eruntime_filter\x18\x05 \x01(\x0b\x32/.envoy.config.filter.accesslog.v2.RuntimeFilterH\x00\x12\x41\n\nand_filter\x18\x06 \x01(\x0b\x32+.envoy.config.filter.accesslog.v2.AndFilterH\x00\x12?\n\tor_filter\x18\x07 \x01(\x0b\x32*.envoy.config.filter.accesslog.v2.OrFilterH\x00\x12G\n\rheader_filter\x18\x08 \x01(\x0b\x32..envoy.config.filter.accesslog.v2.HeaderFilterH\x00\x12T\n\x14response_flag_filter\x18\t \x01(\x0b\x32\x34.envoy.config.filter.accesslog.v2.ResponseFlagFilterH\x00\x12P\n\x12grpc_status_filter\x18\n \x01(\x0b\x32\x32.envoy.config.filter.accesslog.v2.GrpcStatusFilterH\x00\x42\x19\n\x10\x66ilter_specifier\x12\x05\xb8\xe9\xc0\x03\x01\"\xb0\x01\n\x10\x43omparisonFilter\x12M\n\x02op\x18\x01 \x01(\x0e\x32\x35.envoy.config.filter.accesslog.v2.ComparisonFilter.OpB\n\xba\xe9\xc0\x03\x05\x82\x01\x02\x10\x01\x12/\n\x05value\x18\x02 \x01(\x0b\x32 .envoy.api.v2.core.RuntimeUInt32\"\x1c\n\x02Op\x12\x06\n\x02\x45Q\x10\x00\x12\x06\n\x02GE\x10\x01\x12\x06\n\x02LE\x10\x02\"f\n\x10StatusCodeFilter\x12R\n\ncomparison\x18\x01 \x01(\x0b\x32\x32.envoy.config.filter.accesslog.v2.ComparisonFilterB\n\xba\xe9\xc0\x03\x05\x8a\x01\x02\x10\x01\"d\n\x0e\x44urationFilter\x12R\n\ncomparison\x18\x01 \x01(\x0b\x32\x32.envoy.config.filter.accesslog.v2.ComparisonFilterB\n\xba\xe9\xc0\x03\x05\x8a\x01\x02\x10\x01\"\x16\n\x14NotHealthCheckFilter\"\x11\n\x0fTraceableFilter\"\x8b\x01\n\rRuntimeFilter\x12\x1e\n\x0bruntime_key\x18\x01 \x01(\tB\t\xba\xe9\xc0\x03\x04r\x02 \x01\x12\x36\n\x0fpercent_sampled\x18\x02 \x01(\x0b\x32\x1d.envoy.type.FractionalPercent\x12\"\n\x1ause_independent_randomness\x18\x03 \x01(\x08\"[\n\tAndFilter\x12N\n\x07\x66ilters\x18\x01 \x03(\x0b\x32\x31.envoy.config.filter.accesslog.v2.AccessLogFilterB\n\xba\xe9\xc0\x03\x05\x92\x01\x02\x08\x02\"Z\n\x08OrFilter\x12N\n\x07\x66ilters\x18\x02 \x03(\x0b\x32\x31.envoy.config.filter.accesslog.v2.AccessLogFilterB\n\xba\xe9\xc0\x03\x05\x92\x01\x02\x08\x02\"M\n\x0cHeaderFilter\x12=\n\x06header\x18\x01 \x01(\x0b\x32!.envoy.api.v2.route.HeaderMatcherB\n\xba\xe9\xc0\x03\x05\x8a\x01\x02\x10\x01\"z\n\x12ResponseFlagFilter\x12\x64\n\x05\x66lags\x18\x01 \x03(\tBU\xba\xe9\xc0\x03P\x92\x01M\"KrIR\x02LHR\x02UHR\x02UTR\x02LRR\x02URR\x02UFR\x02UCR\x02UOR\x02NRR\x02\x44IR\x02\x46IR\x02RLR\x04UAEXR\x04RLSER\x02\x44\x43R\x03URXR\x02SI\"\xbc\x03\n\x10GrpcStatusFilter\x12\\\n\x08statuses\x18\x01 \x03(\x0e\x32\x39.envoy.config.filter.accesslog.v2.GrpcStatusFilter.StatusB\x0f\xba\xe9\xc0\x03\n\x92\x01\x07\"\x05\x82\x01\x02\x10\x01\x12\x0f\n\x07\x65xclude\x18\x02 \x01(\x08\"\xb8\x02\n\x06Status\x12\x06\n\x02OK\x10\x00\x12\x0c\n\x08\x43\x41NCELED\x10\x01\x12\x0b\n\x07UNKNOWN\x10\x02\x12\x14\n\x10INVALID_ARGUMENT\x10\x03\x12\x15\n\x11\x44\x45\x41\x44LINE_EXCEEDED\x10\x04\x12\r\n\tNOT_FOUND\x10\x05\x12\x12\n\x0e\x41LREADY_EXISTS\x10\x06\x12\x15\n\x11PERMISSION_DENIED\x10\x07\x12\x16\n\x12RESOURCE_EXHAUSTED\x10\x08\x12\x17\n\x13\x46\x41ILED_PRECONDITION\x10\t\x12\x0b\n\x07\x41\x42ORTED\x10\n\x12\x10\n\x0cOUT_OF_RANGE\x10\x0b\x12\x11\n\rUNIMPLEMENTED\x10\x0c\x12\x0c\n\x08INTERNAL\x10\r\x12\x0f\n\x0bUNAVAILABLE\x10\x0e\x12\r\n\tDATA_LOSS\x10\x0f\x12\x13\n\x0fUNAUTHENTICATED\x10\x10\x42\x46\n.io.envoyproxy.envoy.config.filter.accesslog.v2B\x0e\x41\x63\x63\x65sslogProtoP\x01Z\x02v2b\x06proto3')
  ,
  dependencies=[envoy_dot_api_dot_v2_dot_core_dot_base__pb2.DESCRIPTOR,envoy_dot_api_dot_v2_dot_route_dot_route__pb2.DESCRIPTOR,envoy_dot_type_dot_percent__pb2.DESCRIPTOR,google_dot_protobuf_dot_any__pb2.DESCRIPTOR,google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,validate_dot_validate__pb2.DESCRIPTOR,])



_COMPARISONFILTER_OP = _descriptor.EnumDescriptor(
  name='Op',
  full_name='envoy.config.filter.accesslog.v2.ComparisonFilter.Op',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EQ', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1432,
  serialized_end=1460,
)
_sym_db.RegisterEnumDescriptor(_COMPARISONFILTER_OP)

_GRPCSTATUSFILTER_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='envoy.config.filter.accesslog.v2.GrpcStatusFilter.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_ARGUMENT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEADLINE_EXCEEDED', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_FOUND', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALREADY_EXISTS', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PERMISSION_DENIED', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESOURCE_EXHAUSTED', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED_PRECONDITION', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ABORTED', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUT_OF_RANGE', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNIMPLEMENTED', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNAVAILABLE', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_LOSS', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNAUTHENTICATED', index=16, number=16,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2374,
  serialized_end=2686,
)
_sym_db.RegisterEnumDescriptor(_GRPCSTATUSFILTER_STATUS)


_ACCESSLOG = _descriptor.Descriptor(
  name='AccessLog',
  full_name='envoy.config.filter.accesslog.v2.AccessLog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='envoy.config.filter.accesslog.v2.AccessLog.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filter', full_name='envoy.config.filter.accesslog.v2.AccessLog.filter', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='config', full_name='envoy.config.filter.accesslog.v2.AccessLog.config', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))),
    _descriptor.FieldDescriptor(
      name='typed_config', full_name='envoy.config.filter.accesslog.v2.AccessLog.typed_config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='config_type', full_name='envoy.config.filter.accesslog.v2.AccessLog.config_type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=257,
  serialized_end=457,
)


_ACCESSLOGFILTER = _descriptor.Descriptor(
  name='AccessLogFilter',
  full_name='envoy.config.filter.accesslog.v2.AccessLogFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status_code_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.status_code_filter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duration_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.duration_filter', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='not_health_check_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='traceable_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.traceable_filter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='runtime_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.runtime_filter', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='and_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.and_filter', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='or_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.or_filter', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='header_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.header_filter', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response_flag_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.response_flag_filter', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='grpc_status_filter', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='filter_specifier', full_name='envoy.config.filter.accesslog.v2.AccessLogFilter.filter_specifier',
      index=0, containing_type=None, fields=[], options=_descriptor._ParseOptions(descriptor_pb2.OneofOptions(), _b('\270\351\300\003\001'))),
  ],
  serialized_start=460,
  serialized_end=1281,
)


_COMPARISONFILTER = _descriptor.Descriptor(
  name='ComparisonFilter',
  full_name='envoy.config.filter.accesslog.v2.ComparisonFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='envoy.config.filter.accesslog.v2.ComparisonFilter.op', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\202\001\002\020\001'))),
    _descriptor.FieldDescriptor(
      name='value', full_name='envoy.config.filter.accesslog.v2.ComparisonFilter.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _COMPARISONFILTER_OP,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1284,
  serialized_end=1460,
)


_STATUSCODEFILTER = _descriptor.Descriptor(
  name='StatusCodeFilter',
  full_name='envoy.config.filter.accesslog.v2.StatusCodeFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='comparison', full_name='envoy.config.filter.accesslog.v2.StatusCodeFilter.comparison', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\212\001\002\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1462,
  serialized_end=1564,
)


_DURATIONFILTER = _descriptor.Descriptor(
  name='DurationFilter',
  full_name='envoy.config.filter.accesslog.v2.DurationFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='comparison', full_name='envoy.config.filter.accesslog.v2.DurationFilter.comparison', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\212\001\002\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1566,
  serialized_end=1666,
)


_NOTHEALTHCHECKFILTER = _descriptor.Descriptor(
  name='NotHealthCheckFilter',
  full_name='envoy.config.filter.accesslog.v2.NotHealthCheckFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1668,
  serialized_end=1690,
)


_TRACEABLEFILTER = _descriptor.Descriptor(
  name='TraceableFilter',
  full_name='envoy.config.filter.accesslog.v2.TraceableFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1692,
  serialized_end=1709,
)


_RUNTIMEFILTER = _descriptor.Descriptor(
  name='RuntimeFilter',
  full_name='envoy.config.filter.accesslog.v2.RuntimeFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='runtime_key', full_name='envoy.config.filter.accesslog.v2.RuntimeFilter.runtime_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\004r\002 \001'))),
    _descriptor.FieldDescriptor(
      name='percent_sampled', full_name='envoy.config.filter.accesslog.v2.RuntimeFilter.percent_sampled', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='use_independent_randomness', full_name='envoy.config.filter.accesslog.v2.RuntimeFilter.use_independent_randomness', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1712,
  serialized_end=1851,
)


_ANDFILTER = _descriptor.Descriptor(
  name='AndFilter',
  full_name='envoy.config.filter.accesslog.v2.AndFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filters', full_name='envoy.config.filter.accesslog.v2.AndFilter.filters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\222\001\002\010\002'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1853,
  serialized_end=1944,
)


_ORFILTER = _descriptor.Descriptor(
  name='OrFilter',
  full_name='envoy.config.filter.accesslog.v2.OrFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filters', full_name='envoy.config.filter.accesslog.v2.OrFilter.filters', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\222\001\002\010\002'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1946,
  serialized_end=2036,
)


_HEADERFILTER = _descriptor.Descriptor(
  name='HeaderFilter',
  full_name='envoy.config.filter.accesslog.v2.HeaderFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='envoy.config.filter.accesslog.v2.HeaderFilter.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\212\001\002\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2038,
  serialized_end=2115,
)


_RESPONSEFLAGFILTER = _descriptor.Descriptor(
  name='ResponseFlagFilter',
  full_name='envoy.config.filter.accesslog.v2.ResponseFlagFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flags', full_name='envoy.config.filter.accesslog.v2.ResponseFlagFilter.flags', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003P\222\001M\"KrIR\002LHR\002UHR\002UTR\002LRR\002URR\002UFR\002UCR\002UOR\002NRR\002DIR\002FIR\002RLR\004UAEXR\004RLSER\002DCR\003URXR\002SI'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2117,
  serialized_end=2239,
)


_GRPCSTATUSFILTER = _descriptor.Descriptor(
  name='GrpcStatusFilter',
  full_name='envoy.config.filter.accesslog.v2.GrpcStatusFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='statuses', full_name='envoy.config.filter.accesslog.v2.GrpcStatusFilter.statuses', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\n\222\001\007\"\005\202\001\002\020\001'))),
    _descriptor.FieldDescriptor(
      name='exclude', full_name='envoy.config.filter.accesslog.v2.GrpcStatusFilter.exclude', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _GRPCSTATUSFILTER_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2242,
  serialized_end=2686,
)

_ACCESSLOG.fields_by_name['filter'].message_type = _ACCESSLOGFILTER
_ACCESSLOG.fields_by_name['config'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_ACCESSLOG.fields_by_name['typed_config'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_ACCESSLOG.oneofs_by_name['config_type'].fields.append(
  _ACCESSLOG.fields_by_name['config'])
_ACCESSLOG.fields_by_name['config'].containing_oneof = _ACCESSLOG.oneofs_by_name['config_type']
_ACCESSLOG.oneofs_by_name['config_type'].fields.append(
  _ACCESSLOG.fields_by_name['typed_config'])
_ACCESSLOG.fields_by_name['typed_config'].containing_oneof = _ACCESSLOG.oneofs_by_name['config_type']
_ACCESSLOGFILTER.fields_by_name['status_code_filter'].message_type = _STATUSCODEFILTER
_ACCESSLOGFILTER.fields_by_name['duration_filter'].message_type = _DURATIONFILTER
_ACCESSLOGFILTER.fields_by_name['not_health_check_filter'].message_type = _NOTHEALTHCHECKFILTER
_ACCESSLOGFILTER.fields_by_name['traceable_filter'].message_type = _TRACEABLEFILTER
_ACCESSLOGFILTER.fields_by_name['runtime_filter'].message_type = _RUNTIMEFILTER
_ACCESSLOGFILTER.fields_by_name['and_filter'].message_type = _ANDFILTER
_ACCESSLOGFILTER.fields_by_name['or_filter'].message_type = _ORFILTER
_ACCESSLOGFILTER.fields_by_name['header_filter'].message_type = _HEADERFILTER
_ACCESSLOGFILTER.fields_by_name['response_flag_filter'].message_type = _RESPONSEFLAGFILTER
_ACCESSLOGFILTER.fields_by_name['grpc_status_filter'].message_type = _GRPCSTATUSFILTER
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['status_code_filter'])
_ACCESSLOGFILTER.fields_by_name['status_code_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['duration_filter'])
_ACCESSLOGFILTER.fields_by_name['duration_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['not_health_check_filter'])
_ACCESSLOGFILTER.fields_by_name['not_health_check_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['traceable_filter'])
_ACCESSLOGFILTER.fields_by_name['traceable_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['runtime_filter'])
_ACCESSLOGFILTER.fields_by_name['runtime_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['and_filter'])
_ACCESSLOGFILTER.fields_by_name['and_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['or_filter'])
_ACCESSLOGFILTER.fields_by_name['or_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['header_filter'])
_ACCESSLOGFILTER.fields_by_name['header_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['response_flag_filter'])
_ACCESSLOGFILTER.fields_by_name['response_flag_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].fields.append(
  _ACCESSLOGFILTER.fields_by_name['grpc_status_filter'])
_ACCESSLOGFILTER.fields_by_name['grpc_status_filter'].containing_oneof = _ACCESSLOGFILTER.oneofs_by_name['filter_specifier']
_COMPARISONFILTER.fields_by_name['op'].enum_type = _COMPARISONFILTER_OP
_COMPARISONFILTER.fields_by_name['value'].message_type = envoy_dot_api_dot_v2_dot_core_dot_base__pb2._RUNTIMEUINT32
_COMPARISONFILTER_OP.containing_type = _COMPARISONFILTER
_STATUSCODEFILTER.fields_by_name['comparison'].message_type = _COMPARISONFILTER
_DURATIONFILTER.fields_by_name['comparison'].message_type = _COMPARISONFILTER
_RUNTIMEFILTER.fields_by_name['percent_sampled'].message_type = envoy_dot_type_dot_percent__pb2._FRACTIONALPERCENT
_ANDFILTER.fields_by_name['filters'].message_type = _ACCESSLOGFILTER
_ORFILTER.fields_by_name['filters'].message_type = _ACCESSLOGFILTER
_HEADERFILTER.fields_by_name['header'].message_type = envoy_dot_api_dot_v2_dot_route_dot_route__pb2._HEADERMATCHER
_GRPCSTATUSFILTER.fields_by_name['statuses'].enum_type = _GRPCSTATUSFILTER_STATUS
_GRPCSTATUSFILTER_STATUS.containing_type = _GRPCSTATUSFILTER
DESCRIPTOR.message_types_by_name['AccessLog'] = _ACCESSLOG
DESCRIPTOR.message_types_by_name['AccessLogFilter'] = _ACCESSLOGFILTER
DESCRIPTOR.message_types_by_name['ComparisonFilter'] = _COMPARISONFILTER
DESCRIPTOR.message_types_by_name['StatusCodeFilter'] = _STATUSCODEFILTER
DESCRIPTOR.message_types_by_name['DurationFilter'] = _DURATIONFILTER
DESCRIPTOR.message_types_by_name['NotHealthCheckFilter'] = _NOTHEALTHCHECKFILTER
DESCRIPTOR.message_types_by_name['TraceableFilter'] = _TRACEABLEFILTER
DESCRIPTOR.message_types_by_name['RuntimeFilter'] = _RUNTIMEFILTER
DESCRIPTOR.message_types_by_name['AndFilter'] = _ANDFILTER
DESCRIPTOR.message_types_by_name['OrFilter'] = _ORFILTER
DESCRIPTOR.message_types_by_name['HeaderFilter'] = _HEADERFILTER
DESCRIPTOR.message_types_by_name['ResponseFlagFilter'] = _RESPONSEFLAGFILTER
DESCRIPTOR.message_types_by_name['GrpcStatusFilter'] = _GRPCSTATUSFILTER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AccessLog = _reflection.GeneratedProtocolMessageType('AccessLog', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLOG,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.AccessLog)
  ))
_sym_db.RegisterMessage(AccessLog)

AccessLogFilter = _reflection.GeneratedProtocolMessageType('AccessLogFilter', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLOGFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.AccessLogFilter)
  ))
_sym_db.RegisterMessage(AccessLogFilter)

ComparisonFilter = _reflection.GeneratedProtocolMessageType('ComparisonFilter', (_message.Message,), dict(
  DESCRIPTOR = _COMPARISONFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.ComparisonFilter)
  ))
_sym_db.RegisterMessage(ComparisonFilter)

StatusCodeFilter = _reflection.GeneratedProtocolMessageType('StatusCodeFilter', (_message.Message,), dict(
  DESCRIPTOR = _STATUSCODEFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.StatusCodeFilter)
  ))
_sym_db.RegisterMessage(StatusCodeFilter)

DurationFilter = _reflection.GeneratedProtocolMessageType('DurationFilter', (_message.Message,), dict(
  DESCRIPTOR = _DURATIONFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.DurationFilter)
  ))
_sym_db.RegisterMessage(DurationFilter)

NotHealthCheckFilter = _reflection.GeneratedProtocolMessageType('NotHealthCheckFilter', (_message.Message,), dict(
  DESCRIPTOR = _NOTHEALTHCHECKFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.NotHealthCheckFilter)
  ))
_sym_db.RegisterMessage(NotHealthCheckFilter)

TraceableFilter = _reflection.GeneratedProtocolMessageType('TraceableFilter', (_message.Message,), dict(
  DESCRIPTOR = _TRACEABLEFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.TraceableFilter)
  ))
_sym_db.RegisterMessage(TraceableFilter)

RuntimeFilter = _reflection.GeneratedProtocolMessageType('RuntimeFilter', (_message.Message,), dict(
  DESCRIPTOR = _RUNTIMEFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.RuntimeFilter)
  ))
_sym_db.RegisterMessage(RuntimeFilter)

AndFilter = _reflection.GeneratedProtocolMessageType('AndFilter', (_message.Message,), dict(
  DESCRIPTOR = _ANDFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.AndFilter)
  ))
_sym_db.RegisterMessage(AndFilter)

OrFilter = _reflection.GeneratedProtocolMessageType('OrFilter', (_message.Message,), dict(
  DESCRIPTOR = _ORFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.OrFilter)
  ))
_sym_db.RegisterMessage(OrFilter)

HeaderFilter = _reflection.GeneratedProtocolMessageType('HeaderFilter', (_message.Message,), dict(
  DESCRIPTOR = _HEADERFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.HeaderFilter)
  ))
_sym_db.RegisterMessage(HeaderFilter)

ResponseFlagFilter = _reflection.GeneratedProtocolMessageType('ResponseFlagFilter', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSEFLAGFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.ResponseFlagFilter)
  ))
_sym_db.RegisterMessage(ResponseFlagFilter)

GrpcStatusFilter = _reflection.GeneratedProtocolMessageType('GrpcStatusFilter', (_message.Message,), dict(
  DESCRIPTOR = _GRPCSTATUSFILTER,
  __module__ = 'envoy.config.filter.accesslog.v2.accesslog_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.accesslog.v2.GrpcStatusFilter)
  ))
_sym_db.RegisterMessage(GrpcStatusFilter)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n.io.envoyproxy.envoy.config.filter.accesslog.v2B\016AccesslogProtoP\001Z\002v2'))
_ACCESSLOG.fields_by_name['config'].has_options = True
_ACCESSLOG.fields_by_name['config']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\030\001'))
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier'].has_options = True
_ACCESSLOGFILTER.oneofs_by_name['filter_specifier']._options = _descriptor._ParseOptions(descriptor_pb2.OneofOptions(), _b('\270\351\300\003\001'))
_COMPARISONFILTER.fields_by_name['op'].has_options = True
_COMPARISONFILTER.fields_by_name['op']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\202\001\002\020\001'))
_STATUSCODEFILTER.fields_by_name['comparison'].has_options = True
_STATUSCODEFILTER.fields_by_name['comparison']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\212\001\002\020\001'))
_DURATIONFILTER.fields_by_name['comparison'].has_options = True
_DURATIONFILTER.fields_by_name['comparison']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\212\001\002\020\001'))
_RUNTIMEFILTER.fields_by_name['runtime_key'].has_options = True
_RUNTIMEFILTER.fields_by_name['runtime_key']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\004r\002 \001'))
_ANDFILTER.fields_by_name['filters'].has_options = True
_ANDFILTER.fields_by_name['filters']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\222\001\002\010\002'))
_ORFILTER.fields_by_name['filters'].has_options = True
_ORFILTER.fields_by_name['filters']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\222\001\002\010\002'))
_HEADERFILTER.fields_by_name['header'].has_options = True
_HEADERFILTER.fields_by_name['header']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\212\001\002\020\001'))
_RESPONSEFLAGFILTER.fields_by_name['flags'].has_options = True
_RESPONSEFLAGFILTER.fields_by_name['flags']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003P\222\001M\"KrIR\002LHR\002UHR\002UTR\002LRR\002URR\002UFR\002UCR\002UOR\002NRR\002DIR\002FIR\002RLR\004UAEXR\004RLSER\002DCR\003URXR\002SI'))
_GRPCSTATUSFILTER.fields_by_name['statuses'].has_options = True
_GRPCSTATUSFILTER.fields_by_name['statuses']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\n\222\001\007\"\005\202\001\002\020\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
