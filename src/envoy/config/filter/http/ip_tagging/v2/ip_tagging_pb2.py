# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envoy/config/filter/http/ip_tagging/v2/ip_tagging.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from envoy.api.v2.core import address_pb2 as envoy_dot_api_dot_v2_dot_core_dot_address__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from validate import validate_pb2 as validate_dot_validate__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='envoy/config/filter/http/ip_tagging/v2/ip_tagging.proto',
  package='envoy.config.filter.http.ip_tagging.v2',
  syntax='proto3',
  serialized_pb=_b('\n7envoy/config/filter/http/ip_tagging/v2/ip_tagging.proto\x12&envoy.config.filter.http.ip_tagging.v2\x1a\x1f\x65nvoy/api/v2/core/address.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x17validate/validate.proto\"\xc4\x02\n\tIPTagging\x12_\n\x0crequest_type\x18\x01 \x01(\x0e\x32=.envoy.config.filter.http.ip_tagging.v2.IPTagging.RequestTypeB\n\xba\xe9\xc0\x03\x05\x82\x01\x02\x10\x01\x12T\n\x07ip_tags\x18\x04 \x03(\x0b\x32\x37.envoy.config.filter.http.ip_tagging.v2.IPTagging.IPTagB\n\xba\xe9\xc0\x03\x05\x92\x01\x02\x08\x01\x1aK\n\x05IPTag\x12\x13\n\x0bip_tag_name\x18\x01 \x01(\t\x12-\n\x07ip_list\x18\x02 \x03(\x0b\x32\x1c.envoy.api.v2.core.CidrRange\"3\n\x0bRequestType\x12\x08\n\x04\x42OTH\x10\x00\x12\x0c\n\x08INTERNAL\x10\x01\x12\x0c\n\x08\x45XTERNAL\x10\x02\x42L\n4io.envoyproxy.envoy.config.filter.http.ip_tagging.v2B\x0eIpTaggingProtoP\x01Z\x02v2b\x06proto3')
  ,
  dependencies=[envoy_dot_api_dot_v2_dot_core_dot_address__pb2.DESCRIPTOR,google_dot_protobuf_dot_wrappers__pb2.DESCRIPTOR,validate_dot_validate__pb2.DESCRIPTOR,])



_IPTAGGING_REQUESTTYPE = _descriptor.EnumDescriptor(
  name='RequestType',
  full_name='envoy.config.filter.http.ip_tagging.v2.IPTagging.RequestType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BOTH', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERNAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXTERNAL', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=463,
  serialized_end=514,
)
_sym_db.RegisterEnumDescriptor(_IPTAGGING_REQUESTTYPE)


_IPTAGGING_IPTAG = _descriptor.Descriptor(
  name='IPTag',
  full_name='envoy.config.filter.http.ip_tagging.v2.IPTagging.IPTag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip_tag_name', full_name='envoy.config.filter.http.ip_tagging.v2.IPTagging.IPTag.ip_tag_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip_list', full_name='envoy.config.filter.http.ip_tagging.v2.IPTagging.IPTag.ip_list', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=386,
  serialized_end=461,
)

_IPTAGGING = _descriptor.Descriptor(
  name='IPTagging',
  full_name='envoy.config.filter.http.ip_tagging.v2.IPTagging',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request_type', full_name='envoy.config.filter.http.ip_tagging.v2.IPTagging.request_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\202\001\002\020\001'))),
    _descriptor.FieldDescriptor(
      name='ip_tags', full_name='envoy.config.filter.http.ip_tagging.v2.IPTagging.ip_tags', index=1,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\222\001\002\010\001'))),
  ],
  extensions=[
  ],
  nested_types=[_IPTAGGING_IPTAG, ],
  enum_types=[
    _IPTAGGING_REQUESTTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=190,
  serialized_end=514,
)

_IPTAGGING_IPTAG.fields_by_name['ip_list'].message_type = envoy_dot_api_dot_v2_dot_core_dot_address__pb2._CIDRRANGE
_IPTAGGING_IPTAG.containing_type = _IPTAGGING
_IPTAGGING.fields_by_name['request_type'].enum_type = _IPTAGGING_REQUESTTYPE
_IPTAGGING.fields_by_name['ip_tags'].message_type = _IPTAGGING_IPTAG
_IPTAGGING_REQUESTTYPE.containing_type = _IPTAGGING
DESCRIPTOR.message_types_by_name['IPTagging'] = _IPTAGGING
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IPTagging = _reflection.GeneratedProtocolMessageType('IPTagging', (_message.Message,), dict(

  IPTag = _reflection.GeneratedProtocolMessageType('IPTag', (_message.Message,), dict(
    DESCRIPTOR = _IPTAGGING_IPTAG,
    __module__ = 'envoy.config.filter.http.ip_tagging.v2.ip_tagging_pb2'
    # @@protoc_insertion_point(class_scope:envoy.config.filter.http.ip_tagging.v2.IPTagging.IPTag)
    ))
  ,
  DESCRIPTOR = _IPTAGGING,
  __module__ = 'envoy.config.filter.http.ip_tagging.v2.ip_tagging_pb2'
  # @@protoc_insertion_point(class_scope:envoy.config.filter.http.ip_tagging.v2.IPTagging)
  ))
_sym_db.RegisterMessage(IPTagging)
_sym_db.RegisterMessage(IPTagging.IPTag)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n4io.envoyproxy.envoy.config.filter.http.ip_tagging.v2B\016IpTaggingProtoP\001Z\002v2'))
_IPTAGGING.fields_by_name['request_type'].has_options = True
_IPTAGGING.fields_by_name['request_type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\202\001\002\020\001'))
_IPTAGGING.fields_by_name['ip_tags'].has_options = True
_IPTAGGING.fields_by_name['ip_tags']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\272\351\300\003\005\222\001\002\010\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
